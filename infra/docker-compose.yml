version: "3.9"
services:
  # Postgres
  postgres:
    image: postgis/postgis:latest
    container_name: postgres
    ports: [ "5432:5432" ]
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U habrpguser -d habrdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    env_file: [ ../.env ]
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    restart: unless-stopped

  #Админка для pg
#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4:5.7
#    environment:
#      PGADMIN_DEFAULT_EMAIL: "suetolog@habr.com"
#      PGADMIN_DEFAULT_PASSWORD: "suetolog"
#      PGADMIN_CONFIG_SERVER_MODE: "False"
#    volumes:
#      - ./pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:5050"
#    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 1G
#    networks:
#      - postgres

 # Redis
  redis:
    container_name: redis
    platform: linux/x86_64
    image: docker.io/bitnami/redis:7.0
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
    networks:
      - redis-network
    env_file: [ ../.env ]

  #Redis веб интерфейс
  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    platform: linux/x86_64
    restart: always
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports: [ "8081:8081" ]
    networks:
      - redis-network
    env_file: [ ../.env ]

#  valhalla:
#  #build: .
#  #dockerfile: Dockerfile-source
#    image: ghcr.io/gis-ops/docker-valhalla/valhalla:latest
#    ports:
#      - "8002:8002"
#    volumes:
#      - ./valhalla:/data/valhalla

volumes:
  valhalla:
  redis_data:
    driver: local
networks:
  redis-network:
    driver: bridge
  postgres: